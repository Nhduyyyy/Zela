@model Zela.Models.PaymentTransaction

@{
    ViewData["Title"] = "Chi tiết Giao dịch";
    Layout = null; // Không dùng layout
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Chi tiết Giao dịch - @Model.PayOSTransactionId</title>

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css" />
    <!-- Custom CSS -->
    <link rel="stylesheet" href="~/css/admin/payments.css" />
    
    <style>
        /* =================================
           ZELA ADMIN - PAYMENT DETAILS STYLE
           ================================= */

        body {
            background: var(--soft-cream);
            font-family: 'Inter', sans-serif;
            color: var(--text-primary);
            line-height: 1.6;
        }

        .container-fluid {
            max-width: 1400px;
            margin: 0 auto;
        }

        /* Header Styles */
        .page-header {
            background: linear-gradient(135deg, var(--primary-red) 0%, var(--primary-dark) 100%);
            color: white;
            padding: var(--spacing-xl);
            border-radius: var(--border-radius-lg);
            margin-bottom: var(--spacing-xl);
            box-shadow: var(--shadow-lg);
        }

        .page-header h2 {
            font-weight: 700;
            margin-bottom: 0.5rem;
        }

        .page-header p {
            opacity: 0.9;
            margin-bottom: 0;
        }

        .status-badge {
            background: rgba(255,255,255,0.2);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255,255,255,0.3);
            padding: 0.5rem 1rem;
            border-radius: 999px;
            font-weight: 600;
        }

        /* Card Styles */
        .card {
            border: none;
            border-radius: var(--border-radius-lg);
            box-shadow: var(--shadow-md);
            overflow: hidden;
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }

        .card:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-lg);
        }

        .card-header {
            background: linear-gradient(135deg, var(--primary-red) 0%, var(--primary-dark) 100%);
            color: white;
            border: none;
            padding: var(--spacing-lg);
            font-weight: 600;
        }

        .card-header.bg-success {
            background: linear-gradient(135deg, #10B981 0%, #059669 100%) !important;
        }

        .card-header.bg-info {
            background: linear-gradient(135deg, #3B82F6 0%, #2563EB 100%) !important;
        }

        .card-header.bg-dark {
            background: linear-gradient(135deg, #374151 0%, #1F2937 100%) !important;
        }

        .card-body {
            padding: var(--spacing-lg);
            background: white;
        }

        /* Detail Items */
        .detail-item {
            background: var(--soft-cream);
            padding: var(--spacing-md);
            border-radius: var(--border-radius);
            margin-bottom: var(--spacing-sm);
            border: 1px solid var(--border-color);
            transition: all 0.2s ease;
        }

        .detail-item:hover {
            background: var(--accent-peach);
            transform: translateX(4px);
        }

        .detail-label {
            font-weight: 600;
            color: var(--text-secondary);
            font-size: 0.85rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            margin-bottom: 0.25rem;
        }

        .detail-value {
            font-weight: 500;
            color: var(--text-primary);
            font-size: 1rem;
        }

        .amount-value {
            font-size: 1.4rem;
            font-weight: 700;
            color: var(--primary-red);
            text-shadow: 0 1px 2px rgba(0,0,0,0.1);
        }

        /* User Info */
        .user-avatar img {
            border: 4px solid var(--primary-red);
            box-shadow: var(--shadow-md);
            transition: transform 0.2s ease;
        }

        .user-avatar img:hover {
            transform: scale(1.05);
        }

        .user-name {
            font-weight: 700;
            color: var(--text-primary);
            margin-bottom: 0.5rem;
        }

        .user-email,
        .user-phone {
            color: var(--text-secondary);
            font-size: 0.9rem;
            margin-bottom: 0.25rem;
        }

        /* Buttons */
        .btn {
            border-radius: var(--border-radius);
            font-weight: 500;
            padding: 0.5rem 1rem;
            transition: all 0.2s ease;
            border: none;
        }

        .btn:hover {
            transform: translateY(-1px);
            box-shadow: var(--shadow-md);
        }

        .btn-outline-primary {
            color: var(--primary-red);
            border-color: var(--primary-red);
        }

        .btn-outline-primary:hover {
            background: var(--primary-red);
            border-color: var(--primary-red);
        }

        .btn-warning {
            background: linear-gradient(135deg, #F59E0B 0%, #D97706 100%);
            color: white;
        }

        .btn-success {
            background: linear-gradient(135deg, #10B981 0%, #059669 100%);
            color: white;
        }

        .btn-info {
            background: linear-gradient(135deg, #3B82F6 0%, #2563EB 100%);
            color: white;
        }

        .btn-secondary {
            background: linear-gradient(135deg, #6B7280 0%, #4B5563 100%);
            color: white;
        }

        /* Badges */
        .badge {
            font-weight: 600;
            padding: 0.4rem 0.8rem;
            border-radius: 999px;
            font-size: 0.75rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        /* PayOS Response */
        .payos-response {
            background: #1F2937;
            color: #F9FAFB;
            padding: var(--spacing-md);
            border-radius: var(--border-radius);
            font-family: 'Courier New', monospace;
            font-size: 0.85rem;
            max-height: 250px;
            overflow-y: auto;
            white-space: pre-wrap;
            word-break: break-all;
            border: 1px solid #374151;
        }

        /* Responsive */
        @@media (max-width: 768px) {
            .container-fluid {
                padding: var(--spacing-sm);
            }
            
            .page-header {
                padding: var(--spacing-lg);
            }
            
            .card-body {
                padding: var(--spacing-md);
            }
            
            .detail-item {
                padding: var(--spacing-sm);
            }
            
            .amount-value {
                font-size: 1.2rem;
            }
        }
    </style>
</head>
<body>
    <div class="container-fluid p-4">
        <!-- Header -->
        <div class="page-header">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h2 class="mb-1">
                        <i class="bi bi-credit-card-fill"></i>
                        Chi tiết Giao dịch
                    </h2>
                    <p>Thông tin chi tiết về giao dịch thanh toán</p>
                </div>
                <div>
                    <span class="status-badge">@Model.Status</span>
                </div>
            </div>
        </div>

        <div class="row">
            <!-- Transaction Info -->
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-info-circle"></i> Thông tin Giao dịch
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="detail-item">
                                    <div class="detail-label">Mã giao dịch:</div>
                                    <div class="detail-value">@Model.PayOSTransactionId</div>
                                </div>
                                <div class="detail-item">
                                    <div class="detail-label">Mã đơn hàng:</div>
                                    <div class="detail-value">@Model.PayOSOrderCode</div>
                                </div>
                                <div class="detail-item">
                                    <div class="detail-label">Số tiền:</div>
                                    <div class="detail-value amount-value">@Model.Amount.ToString("N0") @Model.Currency</div>
                                </div>
                                <div class="detail-item">
                                    <div class="detail-label">Phương thức thanh toán:</div>
                                    <div class="detail-value">@(Model.PaymentMethod ?? "Không xác định")</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="detail-item">
                                    <div class="detail-label">Trạng thái:</div>
                                    <div class="detail-value">
                                        <span class="badge @(Model.Status switch {
                                            "PAID" => "bg-success",
                                            "Pending" => "bg-warning",
                                            "Failed" => "bg-danger",
                                            "Refunded" => "bg-info",
                                            _ => "bg-secondary"
                                        })">@Model.Status</span>
                                    </div>
                                </div>
                                <div class="detail-item">
                                    <div class="detail-label">Ngày tạo:</div>
                                    <div class="detail-value">@Model.CreatedAt.ToString("dd/MM/yyyy HH:mm:ss")</div>
                                </div>
                                <div class="detail-item">
                                    <div class="detail-label">Ngày hoàn thành:</div>
                                    <div class="detail-value">@(Model.CompletedAt?.ToString("dd/MM/yyyy HH:mm:ss") ?? "Chưa hoàn thành")</div>
                                </div>
                                <div class="detail-item">
                                    <div class="detail-label">Mô tả:</div>
                                    <div class="detail-value">@(Model.Description ?? "Không có mô tả")</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                @if (!string.IsNullOrEmpty(Model.PayOSResponse))
                {
                    <div class="card mt-4">
                        <div class="card-header bg-dark">
                            <h5 class="card-title mb-0">
                                <i class="bi bi-code-slash"></i> Response từ PayOS
                            </h5>
                        </div>
                        <div class="card-body">
                            <pre class="payos-response">@Model.PayOSResponse</pre>
                        </div>
                    </div>
                }
            </div>

            <!-- User Info -->
            <div class="col-lg-4">
                <div class="card">
                    <div class="card-header bg-success">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-person-circle"></i> Thông tin Người dùng
                        </h5>
                    </div>
                    <div class="card-body text-center">
                        <div class="user-avatar mb-3">
                            <img src="@(string.IsNullOrEmpty(Model.User.AvatarUrl) ? "/images/default-avatar.jpeg" : Model.User.AvatarUrl)" 
                                 alt="Avatar" class="rounded-circle" width="80" height="80">
                        </div>
                        <h6 class="user-name">@Model.User.FullName</h6>
                        <p class="user-email">@Model.User.Email</p>
                        <p class="user-phone">Không có số điện thoại</p>
                        <span class="badge bg-primary">@(Model.User.IsPremium ? "Premium" : "Standard")</span>
                        
                        <div class="mt-3">
                            <a href="@Url.Action("UserDetails", "Admin", new { id = Model.UserId })" 
                               class="btn btn-outline-primary btn-sm">
                                <i class="bi bi-eye"></i> Xem chi tiết
                            </a>
                        </div>
                    </div>
                </div>

                <!-- Actions -->
                <div class="card mt-4">
                    <div class="card-header bg-info">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-gear"></i> Thao tác
                        </h5>
                    </div>
                    <div class="card-body">
                        @if (Model.Status == "PAID")
                        {
                            <button type="button" class="btn btn-warning btn-sm w-100 mb-2" 
                                    onclick="showRefundModal(@Model.TransactionId)">
                                <i class="bi bi-arrow-counterclockwise"></i> Hoàn tiền
                            </button>
                        }
                        
                        @if (Model.Status == "Pending")
                        {
                            <button type="button" class="btn btn-success btn-sm w-100 mb-2" 
                                    onclick="markAsPaid(@Model.TransactionId)">
                                <i class="bi bi-check-circle"></i> Đánh dấu đã thanh toán
                            </button>
                        }

                        <button type="button" class="btn btn-info btn-sm w-100 mb-2" 
                                onclick="exportPaymentDetails(@Model.TransactionId)">
                            <i class="bi bi-download"></i> Xuất PDF
                        </button>

                        <button type="button" class="btn btn-secondary btn-sm w-100" 
                                onclick="printPaymentDetails()">
                            <i class="bi bi-printer"></i> In chi tiết
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Refund Modal -->
    <div class="modal fade" id="refundModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="bi bi-arrow-counterclockwise"></i> Hoàn tiền Giao dịch
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p>Bạn có chắc chắn muốn hoàn tiền cho giao dịch này?</p>
                    <div class="mb-3">
                        <label for="refundReason" class="form-label">Lý do hoàn tiền:</label>
                        <textarea class="form-control" id="refundReason" rows="3" 
                                  placeholder="Nhập lý do hoàn tiền..."></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="button" class="btn btn-warning" onclick="confirmRefund()">
                        <i class="bi bi-arrow-counterclockwise"></i> Hoàn tiền
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <!-- jQuery -->
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    
    <script>
        let currentPaymentId = null;

        function showRefundModal(paymentId) {
            currentPaymentId = paymentId;
            $('#refundModal').modal('show');
        }

        function confirmRefund() {
            const reason = $('#refundReason').val();
            
            $.ajax({
                url: '@Url.Action("RefundPayment", "Admin")',
                type: 'POST',
                data: {
                    paymentId: currentPaymentId,
                    reason: reason
                },
                success: function(response) {
                    if (response.success) {
                        alert('Đã hoàn tiền thành công!');
                        window.location.reload();
                    } else {
                        alert(response.message || 'Có lỗi xảy ra!');
                    }
                },
                error: function() {
                    alert('Có lỗi xảy ra khi hoàn tiền!');
                }
            });
            
            $('#refundModal').modal('hide');
        }

        function markAsPaid(paymentId) {
            if (confirm('Bạn có chắc chắn muốn đánh dấu giao dịch này đã thanh toán?')) {
                $.ajax({
                    url: '@Url.Action("MarkPaymentAsPaid", "Admin")',
                    type: 'POST',
                    data: { paymentId: paymentId },
                    success: function(response) {
                        if (response.success) {
                            alert('Đã cập nhật trạng thái thành công!');
                            window.location.reload();
                        } else {
                            alert(response.message || 'Có lỗi xảy ra!');
                        }
                    },
                    error: function() {
                        alert('Có lỗi xảy ra khi cập nhật trạng thái!');
                    }
                });
            }
        }

        function exportPaymentDetails(paymentId) {
            window.open(`@Url.Action("ExportPaymentDetails", "Admin")?paymentId=${paymentId}`, '_blank');
        }

        function printPaymentDetails() {
            window.print();
        }
    </script>
</body>
</html> 
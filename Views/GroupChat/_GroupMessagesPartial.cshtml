@model List<Zela.ViewModels.GroupMessageViewModel>

@Html.AntiForgeryToken()

@foreach (var msg in Model)
{
    <div class="message @(msg.IsMine ? "right" : "left")" data-message-id="@msg.MessageId">
        @if (msg.IsMine)
        {
            <!-- Ng∆∞·ªùi G·ª¨I: th·ªùi gian -> media -> tin nh·∫Øn -> avatar -->
            <div class="message-content">
                <span class="message-time">@msg.SentAt.ToString("HH:mm")</span>
                
                @if (msg.Media != null && msg.Media.Count > 0)
                {
                    foreach (var media in msg.Media)
                    {
                        if (media.MediaType != null && media.MediaType.StartsWith("image/"))
                        {
                            <img src="@media.Url" class="message-media-img" alt="·∫¢nh g·ª≠i"/>
                        }
                        else if (media.MediaType != null && media.MediaType.StartsWith("video/"))
                        {
                            <video src="@media.Url" class="message-media-video" controls></video>
                        }
                        else
                        {
                            <div class="chat-file-attachment">
                                <span class="file-icon"><i class="bi bi-file-earmark-text"></i></span>
                                <span class="file-name">@(media.FileName ?? System.IO.Path.GetFileName(media.Url))</span>
                                <a href="@media.Url" download="@(media.FileName ?? System.IO.Path.GetFileName(media.Url))" class="file-download-btn" title="T·∫£i v·ªÅ"><i class="bi bi-download"></i></a>
                            </div>
                        }
                    }
                }
                @if (!string.IsNullOrWhiteSpace(msg.Content) && msg.Content != "[ƒê√£ g·ª≠i file]")
                {
                    <div class="bubble-row" style="display: flex; align-items: center; gap: 6px;">
                        <div class="message-reaction-btn" onclick="showReactionMenu(@msg.MessageId)">
                            üòÄ
                        </div>
                        <span class="message-bubble">@msg.Content</span>
                    </div>
                }
                
                <!-- Reactions display -->
                @if (msg.Reactions.Any())
                {
                    <div class="message-reactions">
                        @foreach (var reaction in msg.Reactions)
                        {
                            <span class="reaction-badge @(reaction.HasUserReaction ? "user-reaction" : "")" 
                                  data-reaction-type="@reaction.ReactionType"
                                  title="@string.Join(", ", reaction.UserNames)">
                                @GetReactionEmoji(reaction.ReactionType) @reaction.Count
                            </span>
                        }
                    </div>
                }
            </div>
        }
        else
        {
            <!-- Ng∆∞·ªùi NH·∫¨N: avatar -> media -> tin nh·∫Øn -> th·ªùi gian -->
            <img src="@msg.AvatarUrl" class="message-avatar" />
            <div class="message-content">
                <div class="message-sender">@msg.SenderName</div>
                <span class="message-time">@msg.SentAt.ToString("HH:mm")</span>
                @if (msg.Media != null && msg.Media.Count > 0)
                {
                    foreach (var media in msg.Media)
                    {
                        if (media.MediaType != null && media.MediaType.StartsWith("image/"))
                        {
                            <img src="@media.Url" class="message-media-img" alt="·∫¢nh g·ª≠i"/>
                        }
                        else if (media.MediaType != null && media.MediaType.StartsWith("video/"))
                        {
                            <video src="@media.Url" class="message-media-video" controls></video>
                        }
                        else
                        {
                            <div class="chat-file-attachment">
                                <span class="file-icon"><i class="bi bi-file-earmark-text"></i></span>
                                <span class="file-name">@(media.FileName ?? System.IO.Path.GetFileName(media.Url))</span>
                                <a href="@media.Url" download="@(media.FileName ?? System.IO.Path.GetFileName(media.Url))" class="file-download-btn" title="T·∫£i v·ªÅ"><i class="bi bi-download"></i></a>
                            </div>
                        }
                    }
                }
                @if (!string.IsNullOrWhiteSpace(msg.Content) && msg.Content != "[ƒê√£ g·ª≠i file]")
                {
                    <div class="bubble-row" style="display: flex; align-items: center; gap: 6px;">
                        <span class="message-bubble">@msg.Content</span>
                        <div class="message-reaction-btn" onclick="showReactionMenu(@msg.MessageId)">
                            üòÄ
                        </div>
                    </div>
                }
                <!-- Reactions display -->
                @if (msg.Reactions.Any())
                {
                    <div class="message-reactions">
                        @foreach (var reaction in msg.Reactions)
                        {
                            <span class="reaction-badge @(reaction.HasUserReaction ? "user-reaction" : "")" 
                                  data-reaction-type="@reaction.ReactionType"
                                  title="@string.Join(", ", reaction.UserNames)">
                                @GetReactionEmoji(reaction.ReactionType) @reaction.Count
                            </span>
                        }
                    </div>
                }
            </div>
        }
    </div>
}

@functions {
    private string GetReactionEmoji(string reactionType)
    {
        return reactionType switch
        {
            "Like" => "üëç",
            "Love" => "‚ù§Ô∏è",
            "Haha" => "üòÇ",
            "Wow" => "üòÆ",
            "Sad" => "üò¢",
            "Angry" => "üò†",
            _ => "üëç"
        };
    }
}